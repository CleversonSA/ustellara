# uStellara SDR Receiver (by Cleverson S A - PU5TOS)

A radio user frontend for the greate osmosdr rtl_fm utility. This app uses ncurses and was developed and projected to run on Raspberry PI with 3.5 LCD Small screens.

In fact, this app was developed using an Raspberry PI 3 B (2018's model), using vim and GCC.

IMPORTANT NOTICE: This app doesn't modifies the rtl_fm repository, this uses it as a child process in a "smart" way, killing and reestarting it after user request (link change frequency).

I love the linux console mode, so this project was not intented to be a graphical FFT or waterfall, it could be used, in future, by SSH access to tune a "remote" radio connected to external speakers.

# Features

- Frequency tunner with arrow keys usage
- RX mode change with arrow keys usage (like a joystick)
- Frequency skip with direct keyboard input (ex: I'm on 98.1 Mhz FM and want to skip to the UVB76 radio (4.625). So I press F and type the freq)
- Volume level control (thanks alsamixer)
- Squelch level control (direct input)
- Auto freq step or by each scale (like GQRX)
- Low memory usage (May be run this on a RPi Zero? Why not?)


# Known issues
- Like I said, this frontend uses rtl_fm as a child process (System C command), so, sometimes after a frequency search, the rtl_fm app could stop running. It's normal and the only way to correct it is modifing the source code, that's not my target. 
  So. just press R and evething works normal again. 
It was built and projected for Raspberry PI 3+ and small 3.5 LCDs Screens,
so, in big screens could get problems.

# To build
I use gcc (GNU C Compiler), but I've not migrated to make and install schema, so I created a ./build.sh file and a ./run.sh one.


